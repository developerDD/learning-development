#include <iostream>
using namespace std;
void main() {

	/*
	N белочек нашли K орешков и решили разделить их поровну. Определите, сколько орешков достанется каждой белочке.
	На вход дается два целых положительных числа N и K, каждое из которых не превышает 10000.
	*/
	int n, k;
	cin >> n >> k;
	cout << k / n << endl;

	/*
	N белочек нашли K орешков и решили разделить их поровну. Определите, сколько орешков останется после того, 
	как все белочки возьмут себе равное количество орешков.
	На вход дается два целых положительных числа N и K, каждое из которых не превышает 10000.
	*/
	cin >> n >> k;
	cout << k%n << endl;

	/*
	Дано натуральное число, выведите его последнюю цифру.
	*/

	cin >> n;
	n %= 10;
	cout << n;

	/*
	Дано двузначное число. Выведите его первую цифру (число десятков)
	*/

	cin >> n;
	n = n / 10;
	cout << n;

	/*
	Дано целое неотрицательное число N, определите число десятков в нем (предпоследнюю цифру числа). 
	Если предпоследней цифры нет, то можно считать, что число десятков равно нулю.
	*/

	cin >> n;
	cout << ((n - n % 10) / 10) % 10;

	/*
	Дано целое трехзначное число. Найдите сумму его цифр.
	На вход дается число от 100 до 999.
	*/
	int h = 0;
	cin >> n;
	while (n>0)
	{
		h += n % 10;
		n /= 10;
	}
	cout << h;

	/*
	На вход дается натуральное число N. Выведите следующее за ним четное число
	*/

	int n;
	cin >> n;
	if (n%2==0)
	{
		cout << n + 2;
	}
	else
	{
		cout << n + 1;
	}

	/*
	В некоторой школе решили набрать три новых математических класса и оборудовать кабинеты для них новыми партами. 
	За каждой партой может сидеть два учащихся.
	Известно количество учащихся в каждом из трех классов. 
	Выведите наименьшее число парт, которое нужно приобрести для них. 
	Каждый класс сидит в своем кабинете.
	*/
	int a, b, c;
	cin >> a >> b >> c;
	cout << (a + 1) / 2 + (b + 1) / 2 + (c + 1) / 2;


	/*
	Пирожок в столовой стоит A рублей и B копеек. Определите, сколько рублей и копеек нужно заплатить за N пирожков.
	*/

	int a, b, n,f;
	cin >> a >> b >> n;
	cout << (a*n) + (((b*n) / 100)%10)<<" "<<(b*n)%100;

	/*
	Электронные часы показывают время в формате h:mm:ss (от 0:00:00 до 23:59:59), то есть сначала записывается количество часов, 
	потом обязательно двузначное количество минут, затем обязательно двузначное количество секунд. 
	Количество минут и секунд при необходимости дополняются до двузначного числа нулями.

	С начала суток прошло N секунд. Выведите, что покажут часы.
	*/
	unsigned int n;
	cin >> n;
	cout << n / 3600 % 24 << ":" << n % 3600 / 60 / 10 << n % 3600 / 60 % 10 << ":" << n % 3600 % 60 / 10 << n % 3600 % 60 % 10;

	/*
	Даны значения двух моментов времени, принадлежащих одним и тем же суткам: часы, минуты и секунды для каждого из моментов времени.
	Известно, что второй момент времени наступил не раньше первого. Определите, сколько секунд прошло между двумя моментами времени.
	*/
	int a, b, c, a1, b1, c1;
	cin >> a >> b >> c >> a1 >> b1 >> c1;
	cout << ((a1 * 3600) + (b1 * 60) + c1) - ((a * 3600) + (b * 60) + c);

	/*
	Длина Московской кольцевой автомобильной дороги —109 километров. Байкер Вася стартует с нулевого километра МКАД и едет со скоростью V километров в час. 
	На какой отметке он остановится через T часов?
	Программа должна вывести целое число от 0 до 108 — номер отметки, на которой остановится Вася.
	*/

	int a, b;
	cin >> a >> b;
	cout << (109 + (a*b) % 109) % 109;

	/*
	Дано четырехзначное число. Определите, является ли его десятичная запись симметричной. Если число симметричное, 
	то выведите 1, иначе выведите любое другое целое число. Число может иметь меньше четырех знаков,
	тогда нужно считать, что его десятичная запись дополняется слева незначащими нулями.
	*/
	int a, b;
	cin >> a;
	b = ((a / 100) % 10) * 10 + ((a / 100) / 10);
	cout << b - (a % 100) + 1;

	/*
	Улитка ползет по вертикальному шесту высотой H метров, поднимаясь за день на A метров, а за ночь спускаясь на B метров.
	На какой день улитка доползет до вершины шеста?
	*/
	int h, a, b;
	cin >> h >> a >> b;
	int f = h - a;
	int s = a - b;
	int d = (f + s - 1) / s;
	cout << d + 1;

	//УСЛОВНЫЙ ОПЕРАТОР----------------

	/*
	Даны два целых числа. Выведите значение наибольшего из них. Если числа равны, выведите любое из них.
	*/
	int a, b;
	cin >> a >> b;
	a>b ? cout << a : cout << b;

	/*
	Даны два целых числа. Программа должна вывести единицу, 
	если первое число больше второго, двойку, если второе больше первого, или ноль, если они равны.
	*/
	int a, b;
	cin >> a >> b;
	/*if (a>b)
	{
		cout << 1;
	}
	else if (a<b)
	{
		cout << 2;
	}
	else
	{
		cout << 0;
	}*/
	cout << (a > b ? 1 : a < b ? 2 : 0);

	/*
	Даны три целых числа. Найдите наибольшее из них (программа должна вывести ровно одно целое число). 
	Под наибольшим в этой задаче понимается число, которое не меньше, чем любое другое.
	*/

	int a, b, c;
	cin >> a >> b >> c;
	if (a >= b&&a >= c)
	{
		cout << a;
	}
	else if (b >= a&&b >= c)
	{
		cout << b;
	}
	else
	{
		cout << c;
	}

	/*
	Даны три натуральных числа A, B, C. Определите, существует ли треугольник с такими сторонами. 
	Если треугольник существует, выведите строку YES, иначе выведите строку NO.
	Треугольник — это три точки, не лежащие на одной прямой.
	*/

	int a, b, c;
	cin >> a >> b >> c;
	if ((a < b + c) && (b < a + c) && (c < a + b))
	{
		cout << "YES";
	}
	else
	{
		cout << "NO";
	}

	/*
	Даны три целых числа. Определите, сколько среди них совпадающих. Программа должна вывести одно из чисел:
	3 (если все совпадают), 2 (если два совпадает) или 0 (если все числа различны).
	*/

	int a, b, c;
	cin >> a >> b >> c;
	if (a == b&&a == c)
	{
		cout << 3;
	}
	else if (a == b || b == c || c == a)
	{
		cout << 2;
	}
	else
	{
		cout << 0;
	}
	//ЗАДАЧИ С ШАХМАТАМИ
	/*
	Шахматная ладья ходит по горизонтали или вертикали. Даны две различные клетки шахматной доски, 
	определите, может ли ладья попасть с первой клетки на вторую одним ходом.
	*/

	int a, b, c, d;
	cin >> a >> b >> c >> d;
	if (a == c || b == d)
	{
		cout << "YES";
	}
	else
	{
		cout << "NO";
	}

	/*
	Шахматный король ходит по горизонтали, вертикали и диагонали, но только на 1 клетку. 
	Даны две различные клетки шахматной доски, определите, может ли король попасть с первой клетки на вторую одним ходом.
	*/

	int a, b, c, d;
	cin >> a >> b >> c >> d;
	if (c == a&&d == b - 1 || c == a - 1 && d == b - 1 || c == a - 1 && d == b
		|| c == a - 1 && d == b + 1 || c == a&&d == b + 1 || c == a + 1 && d == b + 1
		|| c == a + 1 && d == b || c == a + 1 && d == b - 1)
	{
		cout << "YES";
	}
	else
	{
		cout << "NO";
	}

	/*
	Шахматный слон ходит по диагонали. Даны две различные клетки шахматной доски,
	определите, может ли слон попасть с первой клетки на вторую одним ходом.
	*/

	int a, b, c, d;
	cin >> a >> b >> c >> d;
	if (a + b == c + d || a - c == b - d)
	{
		cout << "YES";
	}
	else
	{
		cout << "NO";
	}

	/*
	Шахматный ферзь ходит по диагонали, горизонтали или вертикали. Даны две различные клетки шахматной доски,
	определите, может ли ферзь попасть с первой клетки на вторую одним ходом.
	*/

	int a, b, c, d;
	cin >> a >> b >> c >> d;
	if (a + b == c + d || a - c == b - d || ((a - c) * (a - c) < 1) || ((b - d) * (b - d) < 1) || a == c || b == d)
	{
		cout << "YES";
	}
	else
	{
		cout << "NO";
	}

	/*
	Шахматный конь ходит буквой “Г” — на две клетки по вертикали в любом направлении и на одну клетку по горизонтали, или наоборот. 
	Даны две различные клетки шахматной доски,	определите, может ли конь попасть с первой клетки на вторую одним ходом.
	*/
	int x1, y1, x2, y2;
	cin >> x1 >> y1 >> x2 >> y2;
	if ((x1 - x2) * (y1 - y2) == 2 || (x1 - x2) * (y1 - y2) == -2)
		cout << "YES";
	else
		cout << "NO";
	//РАЗНОЕ
	/*
	Шоколадка имеет вид прямоугольника, разделенного на N×M долек. Шоколадку можно один раз разломить по прямой на две части.
	Определите, можно ли таким образом отломить от шоколадки ровно K долек.
	*/
	int n, m, k;
	cin >> n >> m >> k;
	if (k<n*m&&k%n == 0 || k<n*m&&k%m == 0)
	{
		cout << "YES";
	}
	else
	{
		cout << "NO";
	}
	/*
	Яша плавал в бассейне размером N×M метров и устал. В этот момент он обнаружил, что находится на расстоянии
	X метров от одного из длинных бортиков 	(не обязательно от ближайшего) и Y метров от одного из коротких бортиков. 
	Какое минимальное расстояние должен проплыть Яша, чтобы выбраться из бассейна на бортик?
	*/

	int n, m, x, y;
	cin >> n >> m >> x >> y;
	if (n>m)
	{
		n = n + m;
		m = n - m;
		n = n - m;
	}
	int min1, min2;
	(n - x) < (m - y) ? min1 = n - x : min1 = m - y;
	x < y ? min2 = x : min2 = y;
	if (min1<min2)
	{
		cout << min1;
	}
	else
	{
		cout << min2;
	}
	/*
	Дано три числа. Упорядочите их в порядке неубывания.
	*/

	int a, b, c, tmp;
	cin >> a >> b >> c;
	if (a>b) { tmp = a; a = b; b = tmp; }
	if (a>c) { tmp = a; a = c; c = tmp; }
	if (b>c) { tmp = b; b = c; c = tmp; }
	cout << a << " " << b << " " << c;
	getchar();
}